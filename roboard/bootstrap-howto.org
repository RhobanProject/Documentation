
How to bootstrap a Debian system on a SD card for the Roboard. (Aymeric)
Tested on a Debian/amd64 host.

Applies to the Roboard.

!!
  Be warned that it is expected that the SD card is on /dev/sdb.
  If you have two hard drives, it is highly probable that /dev/sdb is your
  second hard drive
!!

* Partition the SD card
 * # parted /dev/sdb
 * Within parted,
   * print (shows status of partitions)
   * remove all existing partitions (rm <id>)
   * mkpart (and answer primary, ext3, 64s, 7000M)
   * mkpart (and answer primary, linux-swap, 7000M, 7500M)
   * toggle 1 boot
   * quit

* Prepare/format partitions
 * # mke2fs -t ext3 /dev/sdb1
 * # tune2fs -c 0 -i 0 /dev/sdb1 
(this is quite important because it will prevent an unexpected fsck at
the wrong moment)
 * # mkswap /dev/sdb2

* Mount root file system
 * # mount /dev/sdb1 /mnt/roboard

* Bootstrap Debian system (requires installation of debootstrap)
 * # debootstrap --arch=i386 squeeze /mnt/roboard
(lasts quite long)
 * # mount -o bind /dev /mnt/roboard/dev
 * Edit /mnt/roboard/etc/fstab so that it contains

proc		/proc	proc	defaults		0	0
/dev/sda1	/	ext3	errors=remount-ro	0	1
/dev/sda2	none	swap	sw			0	0

 * Edit /mnt/roboard/etc/inittab and make sure there is a line
T0:23:respawn:/sbin/getty -L ttyS0 115200 vt100
 * # chroot /mnt/roboard
   chroot# mount /proc
   chroot# passwd root
   chroot# apt-get install sudo locales
   chroot# dpkg-reconfigure locales
(choose en_US UTF8, and then default None)
   chroot# apt-get install linux-image-486
   chroot# apt-get install grub
   Edit /etc/default/grub and add the lines
GRUB_CMDLINE_LINUX="console=ttyS0,115200n8"
GRUB_TERMINAL_INPUT=serial
GRUB_TERMINAL_OUTPUT=serial
GRUB_SERIAL_COMMAND="serial --unit=0 --speed 115200 --word=8 --parity=no --stop=1"
   chroot# grub-install /dev/sdb
   chroot# umount /proc
   chroot# exit

 * # umount /mnt/roboard/dev
 * # umount /mnt/roboard

* Compile new kernel supporting the vortex86

Get latest stable kernel from http://www.kernel.org/ (tested with
2.6.39) and extract.

Then, in the top directory of the sources, type

$ make ARCH=i386 menuconfig
(choose the following options)

 * CPU generic support
 * vt6655 (wifi)
 * strip debugging symbols

then
$ make ARCH=i386 targz-pkg


This will create after a long while a linux-2.6.xx.tar.gz which you
can extract to the root directory of the roboard

Then, INSIDE THE CHROOT OF THE ROBOARD, or on the roboard itself,
type

 # update-grub

* Have the card connect to the (ethernet) network

Edit /etc/network/interfaces and put the following lines.

auto eth1
eth1 inet dhcp

Then, either reboot or "/etc/init.d/networking start"

Note that this will have to be changed/removed when the roboard is put
into the robot, otherwise the boot process will hang waiting for a
DHCP lease.

* Add a user "toto"

 * # useradd -m toto
 * # passwd toto
 * # visudo
(add line
toto	ALL=(ALL) ALL
)

* List of necessary packages in order to compile the software on the roboard

 # apt-get install subversion libcv-dev libcvaux-dev libhighgui-dev
(this will pull many things like gcc, make, ...)
(takes a long time)
